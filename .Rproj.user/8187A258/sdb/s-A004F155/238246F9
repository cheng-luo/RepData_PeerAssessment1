{
    "contents" : "# Reproducible Research: Peer Assessment 1\n\n\n## Loading and preprocessing the data\n```{r}\ndata=read.csv(\"activity.csv\")\n```\n\n## What is mean total number of steps taken per day?\n### make a histogram of total number of steps taken per day\n```{r}\n# split by date\ndateGroup=split(data,data$date)\nstepsPerDay=sapply(dateGroup,function(ele) sum(data.frame(ele)$steps,na.rm=T))\nhist(stepsPerDay,breaks=20)\n```\n### Calculate and report the mean and median total number of steps taken per day\n\n```{r}\nmeanSteps=mean(stepsPerDay)\nmedianSteps=median(stepsPerDay)\n```\n\nThe mean and median total number of steps taken per day are `r meanSteps` and `r medianSteps` respecitively.\n\n## What is the average daily activity pattern?\n### Make a time series plot (i.e. type = \"l\") of the 5-minute interval (x-axis) and the average number of steps taken, averaged across all days (y-axis)\n\n```{r}\n# calculate the mean steps for each interval\nintervalGroup=split(data,data$interval)\nstepsPerInterval=sapply(intervalGroup,function(ele) mean(data.frame(ele)$steps,na.rm=T))\nplot(names(stepsPerInterval),stepsPerInterval,type=\"l\",xlab=\"5-min interval\",ylab=\"steps\")\n```\n### Which 5-minute interval, on average across all the days in the dataset, contains the maximum number of steps?\n\n```{r}\nindex=which(stepsPerInterval==max(stepsPerInterval,na.rm=T))\nintervalName=names(stepsPerInterval)[index]\n```\nThe `r intervalName` interval has the maximum number of steps on average.\n## Imputing missing values\n\n### Calculate and report the total number of missing values in the dataset \n```{r}\nnarows=dim(data)[1]-sum(complete.cases(data))\n```\n\n`r narows` observations in the original data have missing values.\n\n### Using the means of 5-minute intervals to fill in all of the missing values in the dataset.\n\n```{r}\n# calculate the mean steps for each interval\nintervalGroup=split(data,data$interval)\nstepsPerInterval=sapply(intervalGroup,function(ele) mean(data.frame(ele)$steps,na.rm=T))\n# use the mean steps to fill NAs\nnaRows=!complete.cases(data)\nindexes=which(naRows)\n# make a copy of the data\nassign('data3',data)\nfor(i in 1:length(indexes))\n{\n    data3[indexes[i],1]=stepsPerInterval[[as.character(data[indexes[i],3])]]\n}\n```\n\n### The above codes also create a new dataset called data3 that is equal to the original dataset but with the missing data filled in.\n\n### Make a histogram of the total number of steps taken each day and Calculate and report the mean and median total number of steps taken per day.\n\n```{r}\n# split by date\ndateGroup2=split(data3,data$date)\nstepsPerDay2=sapply(dateGroup2,function(ele) sum(data.frame(ele)$steps,na.rm=T))\nhist(stepsPerDay2,breaks=20)\n\nmeanSteps2=mean(stepsPerDay2)\nmedianSteps2=median(stepsPerDay2)\n```\n\nThe new mean and median total number of steps taken per day are `r meanSteps2` and `r medianSteps2` respecitively.\n\nThese two new values are different from the mean and median calculated in part 1. \n\nImputing missing data resulted in larger mean and median values.\n\n## Are there differences in activity patterns between weekdays and weekends?\n\n```{r}\ndays=function(string)\n{\n    day=weekdays(as.POSIXlt(string))\n    if(day!=\"Saturday\" & day!=\"Sunday\")\n    {\n        return(\"weekday\")\n    }\n    else\n    {\n        return(\"weekend\")\n    }\n}\n\nday=rep(NA,dim(data)[1])\nfor(i in 1:dim(data)[1])\n{\n    day[i]=days(data$date[i])    \n}\n\ndata4=transform(data3,wday=day)\n\nweekday=subset(data4,wday==\"weekday\")\nweekend=subset(data4,wday==\"weekend\")\n\npar(mfrow=c(2,1))\n# calculate the mean steps for each interval\nintervalGroup3=split(weekend,weekend$interval)\nstepsPerInterval3=sapply(intervalGroup3,function(ele) mean(data.frame(ele)$steps,na.rm=T))\nplot(names(stepsPerInterval3),stepsPerInterval3,type=\"l\",xlab=\"5-min interval\",ylab=\"steps\",main=\"weekend\")\n\n# calculate the mean steps for each interval\nintervalGroup4=split(weekday,weekday$interval)\nstepsPerInterval4=sapply(intervalGroup4,function(ele) mean(data.frame(ele)$steps,na.rm=T))\nplot(names(stepsPerInterval4),stepsPerInterval4,type=\"l\",xlab=\"5-min interval\",ylab=\"steps\",main=\"weekday\")\n\npar(mfrow=c(1,1))\n```\n\n",
    "created" : 1399844389440.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3700055331",
    "id" : "238246F9",
    "lastKnownWriteTime" : 1400291936,
    "path" : "C:/Mis/Misc/Learning/assignments/Reproducible Research/peer1/RepData_PeerAssessment1/PA1_template.Rmd",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_markdown"
}